print("Hello world")
print("Hii")
for i in range (19):
i = 0
for i in range(10):
a = 87
a+i
i=i++ + a
i
i=i++ + a
setwd("E:/Online Courses/Machine Learning A-Z™ Hands-On Python & R In Data Science/Data/Part2-Regression/Section 9 - Support Vector Regression (SVR)/R")
install.packages("e1071")
library(e1071)
#Importing Dataset
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[2:3]
View(dataset)
View(dataset)
#install.packages("e1071")
library(e1071)
regressor = svm(formula = Salary ~ .,
data = dataset,
type = "eps-regression")
y_pred = predict(regressor, data.frame(Level = 6.5))
#Visualizing Regression model results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue") +
ggtitle("Truth or Bluff (SVR Model)") +
xlab("Level of Experience") +
ylab("Salary")
#Visualizing Regression model results (high resolution curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue") +
ggtitle("Truth or Bluff (SVR Model)") +
xlab("Level of Experience") +
ylab("Salary")
install.packages("rpart")
library(rpart)
setwd("E:/Online Courses/Machine Learning A-Z™ Hands-On Python & R In Data Science/Data/Part2-Regression/Section 10 - Decision Tree Regression/R")
#Importing Dataset
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[2:3]
regressor = rpart(formula = Salary ~.,
data = dataset)
y_pred = predict(regressor, data.frame(Level = 6.5))
#Visualizing Regression model results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
#Visualizing Regression model results (high resolution curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
regressor = rpart(formula = Salary ~.,
data = dataset,
control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
#Visualizing Regression model results (high resolution curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
regressor = rpart(formula = Salary ~.,
data = dataset,
control = rpart.control(minsplit = 10))
y_pred = predict(regressor, data.frame(Level = 6.5))
#Visualizing Regression model results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
#Visualizing Regression model results (high resolution curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
#Visualizing Regression model results (high resolution curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = rpart(formula = Salary ~.,
data = dataset,
control = rpart.control(minsplit = 1))
#Visualizing Decision Tree Regression model results (high resolution curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red") +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue") +
ggtitle("Truth or Bluff (Decision Tree Model)") +
xlab("Level of Experience") +
ylab("Salary")
